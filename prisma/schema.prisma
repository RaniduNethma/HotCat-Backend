generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  userName     String      @unique
  name         String
  phone        String
  email        String?     @unique
  password     String
  dateOfBirth  DateTime?
  profileType  ProfileType @default(BRONZE)
  refreshToken String?     @db.Text
  createdAt    DateTime    @default(now())
  order        Order[]
}

model Staff {
  id        Int      @id @default(autoincrement())
  userName  String   @unique
  name      String
  phone     String
  email     String?  @unique
  password  String
  role      Role     @default(WAITER)
  createdAt DateTime @default(now())
  order     Order[]
}

model Table {
  id          Int         @id @default(autoincrement())
  tableNumber Int         @unique
  status      TableStatus @default(FREE)
  order       Order[]
}

model Product {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String?
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     Int
  stock          Int              @default(0)
  createdAt      DateTime         @default(now())
  priceListItems PriceListItems[]
  orderItems     OrderItems[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  product     Product[]
}

model PriceList {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String?
  createdAt      DateTime         @default(now())
  priceListItems PriceListItems[]
}

model PriceListItems {
  id          Int       @id @default(autoincrement())
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  priceList   PriceList @relation(fields: [priceListId], references: [id])
  priceListId Int
  price       Decimal   @db.Decimal(10, 2)
}

model Order {
  id            Int          @id @default(autoincrement())
  User          User?        @relation(fields: [UserId], references: [id])
  UserId        Int?
  staff         Staff?       @relation(fields: [staffId], references: [id])
  staffId       Int?
  table         Table?       @relation(fields: [tableId], references: [id])
  tableId       Int?
  totalDiscount Decimal?     @db.Decimal(10, 2)
  totalPrice    Decimal      @db.Decimal(10, 2)
  status        OrderStatus  @default(PENDING)
  createdAt     DateTime     @default(now())
  orderItems    OrderItems[]
}

model OrderItems {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  Quantity  Int
  subTotal  Decimal @db.Decimal(10, 2)
}

enum ProfileType {
  BRONZE
  SILVER
  GOLD
}

enum Role {
  WAITER
  CHEF
  STORE_KEEPER
  OFFICER
  ADMIN
  MANAGER
}

enum TableStatus {
  FREE
  BUSY
}

enum OrderStatus {
  PENDING
  COOKING
  READY
  DELIVERED
}
