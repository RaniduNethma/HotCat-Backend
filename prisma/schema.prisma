generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int          @id @default(autoincrement())
  userName     String       @unique
  name         String
  phone        String
  email        String?      @unique
  password     String
  dateOfBirth  DateTime?
  profileType  profile_type @default(BRONZE)
  role         role         @default(USER)
  refreshToken String?      @db.Text
  createdAt    DateTime     @default(now())
  order        order[]
}

model table {
  id          Int          @id @default(autoincrement())
  tableNumber Int          @unique
  status      table_status @default(FREE)
  order       order[]
}

model product {
  id             Int                @id @default(autoincrement())
  name           String             @unique
  description    String?
  category       category           @relation(fields: [categoryId], references: [id])
  categoryId     Int
  stock          Int                @default(0)
  createdAt      DateTime           @default(now())
  priceListItems price_list_items[]
  orderItems     order_items[]
}

model category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  product     product[]
}

model price_list {
  id             Int                @id @default(autoincrement())
  name           String             @unique
  description    String?
  createdAt      DateTime           @default(now())
  priceListItems price_list_items[]
}

model price_list_items {
  id          Int        @id @default(autoincrement())
  product     product    @relation(fields: [productId], references: [id])
  productId   Int
  priceList   price_list @relation(fields: [priceListId], references: [id])
  priceListId Int
  price       Decimal    @db.Decimal(10, 2)
}

model order {
  id            Int           @id @default(autoincrement())
  user          user?         @relation(fields: [UserId], references: [id])
  UserId        Int?
  table         table?        @relation(fields: [tableId], references: [id])
  tableId       Int?
  totalDiscount Decimal?      @db.Decimal(10, 2)
  totalPrice    Decimal       @db.Decimal(10, 2)
  status        order_status  @default(PENDING)
  createdAt     DateTime      @default(now())
  orderItems    order_items[]
}

model order_items {
  id        Int     @id @default(autoincrement())
  order     order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   product @relation(fields: [productId], references: [id])
  productId Int
  Quantity  Int
  subTotal  Decimal @db.Decimal(10, 2)
}

enum profile_type {
  BRONZE
  SILVER
  GOLD
}

enum role {
  USER
  WAITER
  CHEF
  STORE_KEEPER
  OFFICER
  ADMIN
  MANAGER
}

enum table_status {
  FREE
  BUSY
}

enum order_status {
  PENDING
  COOKING
  READY
  DELIVERED
}
